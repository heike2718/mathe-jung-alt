{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "mja-api",
    "description" : "API für mein Internet-Aufgabenarchiv",
    "contact" : {
      "name" : "Heike Winkelvoß",
      "url" : "https://mathe-jung-alt.de",
      "email" : "info@egladil.de"
    },
    "license" : {
      "url" : "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.4.0"
  },
  "servers" : [ {
    "url" : "http://localhost:9210",
    "description" : "Auto generated value"
  }, {
    "url" : "http://0.0.0.0:9210",
    "description" : "Auto generated value"
  } ],
  "tags" : [ {
    "name" : "Deskriptoren"
  }, {
    "name" : "Grafikvorschau"
  }, {
    "name" : "Quellen"
  }, {
    "name" : "Quiz",
    "description" : "Stellt Aufgaben von Rätselgruppen in verschiedenen Formen als Quiz zur Verfügung."
  }, {
    "name" : "Raetsel"
  }, {
    "name" : "Raetselgruppen"
  }, {
    "name" : "Session"
  }, {
    "name" : "Upload"
  } ],
  "paths" : {
    "/deskriptoren/ids" : {
      "get" : {
        "tags" : [ "Deskriptoren" ],
        "summary" : "Wandelt Deskriptoren in eine kommaseparierte Liste ihrer IDs um",
        "operationId" : "transformToDeskriptorenOrdinal",
        "parameters" : [ {
          "name" : "deskriptoren",
          "in" : "query",
          "description" : "kommaseparierte Liste von Namen von Deskriptoren",
          "schema" : {
            "pattern" : "^[a-zA-ZäöüßÄÖÜ\\d\\,\\- ]{0,200}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deskriptoren erfolgreich transformiert.",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/deskriptoren/v1" : {
      "get" : {
        "tags" : [ "Deskriptoren" ],
        "summary" : "Liefert die Liste aller Deskriptoren, die auf einen Kontext passen.",
        "operationId" : "loadDeskriptorenV1",
        "parameters" : [ {
          "name" : "kontext",
          "in" : "query",
          "description" : "Kontext, zu dem die Deskriptoren geladen werden",
          "schema" : {
            "$ref" : "#/components/schemas/DeskriptorSuchkontext"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Alle Deskriptoren erfolgreich gelesen.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Deskriptor"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "deprecated" : true,
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/deskriptoren/v2" : {
      "get" : {
        "tags" : [ "Deskriptoren" ],
        "summary" : "Liefert die Liste aller Deskriptoren. Je nach Rolle werden nur die public oder alle geladen.",
        "operationId" : "loadDeskriptorenV2",
        "responses" : {
          "200" : {
            "description" : "Alle Deskriptoren erfolgreich gelesen.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeskriptorUI"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR", "STANDARD" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR", "STANDARD" ]
        } ]
      }
    },
    "/grafiken/v1" : {
      "get" : {
        "tags" : [ "Grafikvorschau" ],
        "summary" : "liefert eine Grafikvorschau (png) für ein Image, das in LaTeX eingebunden wird.",
        "operationId" : "findGrafik",
        "parameters" : [ {
          "name" : "pfad",
          "in" : "query",
          "description" : "Pfad des Zielverzeichnisses relativ zum konfigurierten latex.base.dir. Der Wert des Parameters muss mit einem / beginnen",
          "schema" : {
            "pattern" : "^(/[\\da-zA-Z_\\-/]*\\.[\\da-zA-Z_\\-/]*)$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Grafikvorschau geladen",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Grafik"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/quellen/admin/v1" : {
      "get" : {
        "tags" : [ "Quellen" ],
        "summary" : "Gibt die Quelle zurück, die zu der eingeloggten Person gehört",
        "operationId" : "findOwnQuelle",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Quelle"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "deprecated" : true,
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/quellen/admin/v2" : {
      "get" : {
        "tags" : [ "Quellen" ],
        "summary" : "Gibt die Quelle zurück, die zu der eingeloggten Person gehört",
        "operationId" : "findOwnQuelle",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Quelle"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/quellen/v1" : {
      "get" : {
        "tags" : [ "Quellen" ],
        "summary" : "Gibt alle Quellen zurück, die auf die gegebene Suchanfrage passen.",
        "operationId" : "findQuellenV1",
        "parameters" : [ {
          "name" : "suchstring",
          "in" : "query",
          "description" : "Freitext zum suchen. Es wird mit like nach diesem Text gesucht",
          "schema" : {
            "pattern" : "^[\\w äöüß \\+ \\- \\. \\,]{1,30}$",
            "type" : "string"
          }
        }, {
          "name" : "deskriptoren",
          "in" : "query",
          "description" : "kommaseparierte Liste von Namen von Deskriptoren",
          "schema" : {
            "pattern" : "^[\\d\\,]{0,200}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Quelle"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "deprecated" : true,
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/quellen/v1/{quelleId}" : {
      "get" : {
        "tags" : [ "Quellen" ],
        "summary" : "Gibt die Quelle mit der gegebenen ID zurück",
        "operationId" : "findQuelleById",
        "parameters" : [ {
          "name" : "quelleId",
          "in" : "path",
          "description" : "technische ID der Quelle",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Quelle"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/quellen/v2" : {
      "get" : {
        "tags" : [ "Quellen" ],
        "summary" : "Gibt alle Quellen zurück, die auf die gegebene Suchanfrage passen.",
        "operationId" : "findQuellen",
        "parameters" : [ {
          "name" : "suchstring",
          "in" : "query",
          "description" : "Freitext zum suchen. Es wird mit like nach diesem Text gesucht",
          "schema" : {
            "pattern" : "^[\\w äöüß \\+ \\- \\. \\,]{1,30}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Quelle"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/quiz/v1/arbeitsblaetter/PDF/{raetselgruppeID}" : {
      "get" : {
        "tags" : [ "Quiz" ],
        "summary" : "Generiert aus der Rätselgruppe mit der gegebenen ID ein PDF. Diese API stellt nur die Rätselgruppen mit Status FREIGEGEBEN bereit. Die Lösungen werden am Ende des PDFs von den Aufgaben separiert gedruckt.",
        "operationId" : "printArbeitsblaetter",
        "parameters" : [ {
          "name" : "raetselgruppeID",
          "in" : "path",
          "description" : "ID der Rätselgruppe, für das ein Quiz gedruckt wird.",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        }, {
          "name" : "layoutAntwortvorschlaege",
          "in" : "query",
          "description" : "Layout, wie die Antwortvorschläge dargestellt werden sollen, wenn es welche gibt (Details siehe LayoutAntwortvorschlaege)",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LayoutAntwortvorschlaege"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Quiz erfolgreich geladen",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneratedFile"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht"
          },
          "500" : {
            "description" : "Serverfehler",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR", "LEHRER", "PRIVAT", "STANDARD" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR", "LEHRER", "PRIVAT", "STANDARD" ]
        } ]
      }
    },
    "/quiz/v1/{referenztyp}/{referenz}/{schwierigkeitsgrad}" : {
      "get" : {
        "tags" : [ "Quiz" ],
        "summary" : "Generiert ein JSON-Objekt mit allen Aufgaben und Lösungen der Rätselgruppe, die durch die fachlichen Parameter eindeutig bestimmt ist. Das ist eine Methode, um auf die Minikänguru-Wettbewerbe zuzugreifen, ohne deren ID zu kennen. Die API liefert nur Quiz mit dem Status FREIGEGEBEN zurück.",
        "operationId" : "generateQuizWithUniqueKey",
        "parameters" : [ {
          "name" : "referenztyp",
          "in" : "path",
          "description" : "Kontext zur Interpretation der Referenz",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Referenztyp"
          }
        }, {
          "name" : "referenz",
          "in" : "path",
          "description" : "ID im alten Aufgabenarchiv",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w äöüß]{1,20}$",
            "type" : "string"
          }
        }, {
          "name" : "schwierigkeitsgrad",
          "in" : "path",
          "description" : "Klassenstufe, für die das Quiz gedacht ist",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Schwierigkeitsgrad"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Quiz erfolgreich geladen",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Quiz"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht"
          },
          "500" : {
            "description" : "Serverfehler",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          }
        }
      }
    },
    "/raetsel/admin/v2" : {
      "get" : {
        "tags" : [ "Raetsel" ],
        "summary" : "Gibt alle Rätsel zurück, die auf die gegebene Suchanfrage passen.",
        "operationId" : "findRaetsel",
        "parameters" : [ {
          "name" : "suchstring",
          "in" : "query",
          "description" : "Freitext zum suchen. Es erfolgt eine Volltextsuche über Schlüssel, Name, Kommentar, Frage und Lösung",
          "schema" : {
            "pattern" : "^[\\w äöüß \\+ \\- \\. \\,]{4,30}$",
            "type" : "string"
          }
        }, {
          "name" : "deskriptoren",
          "in" : "query",
          "description" : "kommaseparierte Liste von Deskriptoren-Identifizierern",
          "schema" : {
            "pattern" : "^[a-zA-ZäöüßÄÖÜ\\d\\,\\- ]{0,200}$",
            "type" : "string"
          }
        }, {
          "name" : "typeDeskriptoren",
          "in" : "query",
          "description" : "wie die Deskriptoren gesendet werden (NAME oder ID)",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/EnumType"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Pagination: pageSize",
          "schema" : {
            "format" : "int32",
            "default" : 20,
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination: pageIndex",
          "schema" : {
            "format" : "int32",
            "default" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "description" : "Sortierung. Es wird nach SCHLUESSEL sortiert.",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SortDirection"
            }, {
              "default" : "asc"
            } ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RaetselsucheTreffer"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetsel/v1" : {
      "get" : {
        "tags" : [ "Raetsel" ],
        "summary" : "Gibt alle Rätsel zurück, die auf die gegebene Suchanfrage passen. Wird mit dem nächsten PROD-Release gestrichen.",
        "operationId" : "findRaetsel",
        "parameters" : [ {
          "name" : "suchstring",
          "in" : "query",
          "description" : "Freitext zum suchen. Es erfolgt eine Volltextsuche über Schlüssel, Name, Kommentar, Frage und Lösung",
          "schema" : {
            "pattern" : "^[\\w äöüß \\+ \\- \\. \\,]{4,30}$",
            "type" : "string"
          }
        }, {
          "name" : "deskriptoren",
          "in" : "query",
          "description" : "kommaseparierte Liste von Deskriptoren-Identifizierern",
          "schema" : {
            "pattern" : "^[a-zA-ZäöüßÄÖÜ\\d\\,\\- ]{0,200}$",
            "type" : "string"
          }
        }, {
          "name" : "typeDeskriptoren",
          "in" : "query",
          "description" : "wie die Deskriptoren gesendet werden (NAME oder ID)",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/EnumType"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Pagination: pageSize",
          "schema" : {
            "format" : "int32",
            "default" : 20,
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination: pageIndex",
          "schema" : {
            "format" : "int32",
            "default" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "description" : "Sortierung. Es wird nach SCHLUESSEL sortiert.",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SortDirection"
            }, {
              "default" : "asc"
            } ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RaetselsucheTreffer"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "deprecated" : true,
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      },
      "put" : {
        "tags" : [ "Raetsel" ],
        "summary" : "vorhandenes Rätsel ändern",
        "operationId" : "raetselAendern",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditRaetselPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Raetsel"
                }
              }
            }
          },
          "409" : {
            "description" : "der geänderte schluessel ist schon vergeben",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      },
      "post" : {
        "tags" : [ "Raetsel" ],
        "summary" : "neues Rätsel anlegen",
        "operationId" : "raetselAnlegen",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditRaetselPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Raetsel"
                }
              }
            }
          },
          "409" : {
            "description" : "der gewählte schluessel ist schon vergeben",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetsel/v1/PDF/{raetselID}" : {
      "get" : {
        "tags" : [ "Raetsel" ],
        "summary" : "generiert ein PDF mit dem Rätsel",
        "operationId" : "raetselPDFGenerieren",
        "parameters" : [ {
          "name" : "raetselID",
          "in" : "path",
          "description" : "technische ID des Rätsels",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        }, {
          "name" : "layoutAntwortvorschlaege",
          "in" : "query",
          "description" : "Layout, wie die Antwortvorschläge dargestellt werden sollen, wenn es welche gibt (Details siehe LayoutAntwortvorschlaege)",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LayoutAntwortvorschlaege"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneratedFile"
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR", "LEHRER", "PRIVAT", "STANDARD" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR", "LEHRER", "PRIVAT", "STANDARD" ]
        } ]
      }
    },
    "/raetsel/v1/PNG/{raetselID}" : {
      "post" : {
        "tags" : [ "Raetsel" ],
        "summary" : "generiert die Vorschaubilder (png) des Rätsels",
        "operationId" : "raetselImagesGenerieren",
        "parameters" : [ {
          "name" : "raetselID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "layoutAntwortvorschlaege",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LayoutAntwortvorschlaege"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Images"
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetsel/v1/PNG/{schluessel}" : {
      "get" : {
        "tags" : [ "Raetsel" ],
        "summary" : "Läd die Vorschaubilder (png) des Rätsels",
        "operationId" : "raetselImagesLaden",
        "parameters" : [ {
          "name" : "schluessel",
          "in" : "path",
          "description" : "Fachlicher Schlüssel des Rätsels",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Images"
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetsel/v1/{raetselID}" : {
      "get" : {
        "tags" : [ "Raetsel" ],
        "summary" : "Läd die Details des Rätsels mit der gegebenen ID",
        "operationId" : "raetselDetailsLaden",
        "parameters" : [ {
          "name" : "raetselID",
          "in" : "path",
          "description" : "technische ID des Rätsels",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Raetsel"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetsel/v2" : {
      "get" : {
        "tags" : [ "Raetsel" ],
        "summary" : "Gibt alle Rätsel mit den gegebenen Deskriptoren zurück",
        "operationId" : "findRaetselPublic",
        "parameters" : [ {
          "name" : "deskriptoren",
          "in" : "query",
          "description" : "kommaseparierte Liste von Deskriptoren-Identifizierern",
          "schema" : {
            "pattern" : "^[a-zA-ZäöüßÄÖÜ\\d\\,\\- ]{0,200}$",
            "type" : "string"
          }
        }, {
          "name" : "typeDeskriptoren",
          "in" : "query",
          "description" : "wie die Deskriptoren gesendet werden (NAME oder ID)",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/EnumType"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Pagination: pageSize",
          "schema" : {
            "format" : "int32",
            "default" : 20,
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination: pageIndex",
          "schema" : {
            "format" : "int32",
            "default" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "description" : "Sortierung. Es wird nach SCHLUESSEL sortiert.",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SortDirection"
            }, {
              "default" : "asc"
            } ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RaetselsucheTreffer"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "fehlgeschlagene Input-Validierung"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR", "LEHRER", "PRIVAT", "STANDARD" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR", "LEHRER", "PRIVAT", "STANDARD" ]
        } ]
      }
    },
    "/raetselgruppen/v1" : {
      "get" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "Gibt alle Rätselgruppen zurück, die auf die gegebene Suchanfrage passen.",
        "operationId" : "findGruppen",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Teil des Namens der Gruppe (Suche mit like)",
          "schema" : {
            "maxLength" : 100,
            "minLength" : 1,
            "pattern" : "[\\w äöüß\\:\\-\\.\\,]*",
            "type" : "string"
          }
        }, {
          "name" : "schwierigkeitsgrad",
          "in" : "query",
          "description" : "Klassenstufe, für die die Rätselgruppe gedacht ist (enum)",
          "schema" : {
            "$ref" : "#/components/schemas/Schwierigkeitsgrad"
          }
        }, {
          "name" : "referenztyp",
          "in" : "query",
          "description" : "Kontext zur Interpretation des Parameters 'referenz'",
          "schema" : {
            "$ref" : "#/components/schemas/Referenztyp"
          }
        }, {
          "name" : "referenz",
          "in" : "query",
          "description" : "ID im alten Aufgabenarchiv",
          "schema" : {
            "maxLength" : 36,
            "minLength" : 1,
            "pattern" : "^[\\w äöüß]{1,20}$",
            "type" : "string"
          }
        }, {
          "name" : "sortAttribute",
          "in" : "query",
          "description" : "Attribut, nach dem sortiert wird",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RaetselgruppenSortattribute"
            }, {
              "default" : "name"
            } ]
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "description" : "Sortierrichtung für das gewählte Attribut",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SortDirection"
            }, {
              "default" : "asc"
            } ]
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Pagination: pageSize",
          "schema" : {
            "format" : "int32",
            "default" : 20,
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Pagination: pageIndex",
          "schema" : {
            "format" : "int32",
            "default" : 0,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RaetselgruppensucheTreffer"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      },
      "put" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "neue Rätselgruppe anlegen",
        "operationId" : "raetselgruppeAendern",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditRaetselgruppePayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RaetselgruppensucheTrefferItem"
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      },
      "post" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "neue Rätselgruppe anlegen",
        "operationId" : "raetselgruppeAnlegen",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditRaetselgruppePayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RaetselgruppensucheTrefferItem"
                }
              }
            }
          },
          "500" : {
            "description" : "server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetselgruppen/v1/latex/{raetselgruppeID}" : {
      "get" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "Generiert aus der Rätselgruppe mit der gegebenen ID ein LaTeX. Diese API funktioniert für Rätselgruppen mit beliebigem Status. Aufgaben und Lösungen werden zusammen gedruckt.",
        "operationId" : "downloadLaTeXSource",
        "parameters" : [ {
          "name" : "raetselgruppeID",
          "in" : "path",
          "description" : "ID der Rätselgruppe, für das ein Quiz gedruckt wird.",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        }, {
          "name" : "layoutAntwortvorschlaege",
          "in" : "query",
          "description" : "Layout, wie die Antwortvorschläge dargestellt werden sollen, wenn es welche gibt (Details siehe LayoutAntwortvorschlaege)",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LayoutAntwortvorschlaege"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "LaTeX erfolgreich generiert",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneratedFile"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht"
          },
          "500" : {
            "description" : "Serverfehler",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetselgruppen/v1/vorschau/{raetselgruppeID}" : {
      "get" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "Generiert aus der Rätselgruppe mit der gegebenen ID ein PDF. Diese API funktioniert für Rätselgruppen mit beliebigem Status. Aufgaben und Lösungen werden zusammen gedruckt.",
        "operationId" : "printQuiz",
        "parameters" : [ {
          "name" : "raetselgruppeID",
          "in" : "path",
          "description" : "ID der Rätselgruppe, für das ein Quiz gedruckt wird.",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        }, {
          "name" : "layoutAntwortvorschlaege",
          "in" : "query",
          "description" : "Layout, wie die Antwortvorschläge dargestellt werden sollen, wenn es welche gibt (Details siehe LayoutAntwortvorschlaege)",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LayoutAntwortvorschlaege"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PDF erfolgreich generiert",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneratedFile"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht"
          },
          "500" : {
            "description" : "Serverfehler",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetselgruppen/v1/{raetselgruppeID}" : {
      "get" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "Läd die Details der Rätselgruppe mit der gegebenen ID",
        "operationId" : "raetselgruppeDetailsLaden",
        "parameters" : [ {
          "name" : "raetselgruppeID",
          "in" : "path",
          "description" : "technische ID der Rätselgruppe",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RaetselgruppeDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetselgruppen/v1/{raetselgruppeID}/elemente" : {
      "put" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "Ändert das Element einer Rätselgruppe. Es können nur Nummer und Punkte geändert werden. Wenn der Schlüssel nicht stimmt, muss es gelöscht und neu angelegt werden.",
        "operationId" : "raetselgruppenelementAendern",
        "parameters" : [ {
          "name" : "raetselgruppeID",
          "in" : "path",
          "description" : "ID der Raetselgruppe.",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditRaetselgruppenelementPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RaetselgruppeDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Die Rätselgruppe oder das Element gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "500" : {
            "description" : "Gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      },
      "post" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "Legt ein neues Element in einer Rätselgruppe an",
        "operationId" : "raetselgruppenelementAnlegen",
        "parameters" : [ {
          "name" : "raetselgruppeID",
          "in" : "path",
          "description" : "ID der Raetselgruppe.",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditRaetselgruppenelementPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RaetselgruppeDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Die Rätselgruppe oder das Rätsel mit dem fachlichen SCHLUESSEL gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "409" : {
            "description" : "Nummer würde doppelt vergeben",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "500" : {
            "description" : "Serverfehler",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/raetselgruppen/v1/{raetselgruppeID}/elemente/{elementID}" : {
      "delete" : {
        "tags" : [ "Raetselgruppen" ],
        "summary" : "Löscht das Element einer Rätselgruppe",
        "operationId" : "raetselgruppenelementLoeschen",
        "parameters" : [ {
          "name" : "raetselgruppeID",
          "in" : "path",
          "description" : "ID der Rätselgruppe",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        }, {
          "name" : "elementID",
          "in" : "path",
          "description" : "ID des Elements",
          "required" : true,
          "schema" : {
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RaetselgruppeDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Die Rätselgruppe oder das Element gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "500" : {
            "description" : "Gibt es nicht",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    },
    "/session/authurls/login/{clientType}" : {
      "get" : {
        "tags" : [ "Session" ],
        "summary" : "Gibt die Login-URL zurück, mit der eine Anwendung zum authprovider redirecten kann",
        "operationId" : "getLoginUrl",
        "parameters" : [ {
          "name" : "clientType",
          "in" : "path",
          "description" : "Typ des Clients beim authprovider",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ClientType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          }
        }
      }
    },
    "/session/dev/logout/{sessionId}" : {
      "delete" : {
        "tags" : [ "Session" ],
        "summary" : "entfernt die Session (nur Dev)",
        "operationId" : "logoutDev",
        "parameters" : [ {
          "name" : "sessionId",
          "in" : "path",
          "description" : "id der Session",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          }
        }
      }
    },
    "/session/login/{clientType}" : {
      "post" : {
        "tags" : [ "Session" ],
        "summary" : "Erzeugt eine Session anhand des per S2S-Kommunikation für das 'one time token' beim authprovider gekauften JWT und packt die SessionId in ein Cookie",
        "operationId" : "login",
        "parameters" : [ {
          "name" : "clientType",
          "in" : "path",
          "description" : "Typ des Clients beim authprovider",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ClientType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthResult"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          }
        }
      }
    },
    "/session/logout" : {
      "delete" : {
        "tags" : [ "Session" ],
        "summary" : "entfernt die Session",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "JSESSIONID_MJA_ADMIN",
          "in" : "cookie",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          }
        }
      }
    },
    "/uploads/v1" : {
      "post" : {
        "tags" : [ "Upload" ],
        "summary" : "Nimmt eine hochgeladene Datei des UploadTypes (eps) entgegen und speichert sie in dem gewünschten Unterverzeichnis des latex.base.dirs",
        "operationId" : "uploadFile",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Typ des Files, der festlegt, wie die Datei verarbeitet bzw. genutzt wird",
          "schema" : {
            "$ref" : "#/components/schemas/UploadType"
          }
        }, {
          "name" : "pfad",
          "in" : "query",
          "description" : "Pfad des Zielverzeichnisses relativ zum konfigurierten latex.base.dir. Der Wert des Parameters muss mit einem / beginnen",
          "schema" : {
            "pattern" : "^(/[\\da-zA-Z_\\-/]*\\.[\\da-zA-Z_\\-/]*)$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "uploadedFile" : {
                    "$ref" : "#/components/schemas/FileUpload"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Datei erfolgreich hochgeladen",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "400" : {
            "description" : "pfad verstößt gegen Validierungsregel oder File ist zu groß oder hat Virus"
          },
          "500" : {
            "description" : "sonstige Fehler",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagePayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "deprecated" : true,
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        }, {
          "SecurityScheme" : [ "ADMIN", "AUTOR" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Antwortvorschlag" : {
        "description" : "Antwortvorschlag für ein multiple choice-Rätsel",
        "type" : "object",
        "properties" : {
          "buchstabe" : {
            "description" : "der Antwortbuchstabe A, B, C, ... zur Anzeige einer Vorschlagsauswahl",
            "type" : "string"
          },
          "text" : {
            "description" : "optionaler Text der Antwort",
            "type" : "string"
          },
          "korrekt" : {
            "description" : "Flag, ob dies die korrekte Antwort ist.",
            "type" : "boolean"
          }
        }
      },
      "AuthResult" : {
        "description" : "Ergebnis der Authentifizierung beim authprovider",
        "required" : [ "nonce", "idToken" ],
        "type" : "object",
        "properties" : {
          "expiresAt" : {
            "format" : "int64",
            "description" : "Gültigkeit des generierten Einmaltokens",
            "type" : "integer"
          },
          "state" : {
            "description" : "ein Kontext, also Login oder SignUp",
            "type" : "string"
          },
          "nonce" : {
            "description" : "für die Autorisierung generierter String, der vom authprovider unverändert zurückgegeben wird",
            "pattern" : "\\S",
            "type" : "string"
          },
          "idToken" : {
            "description" : "Einmaltoken, mit dem sich der authprovider-Client das JWT holen kann",
            "pattern" : "\\S",
            "type" : "string"
          }
        }
      },
      "ClientType" : {
        "description" : "für das Login erforderlich",
        "enum" : [ "ADMIN", "PUBLIC" ],
        "type" : "string"
      },
      "Deskriptor" : {
        "description" : "Deskriptor-Entity mit allen Attributen.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "technische ID",
            "type" : "integer"
          },
          "name" : {
            "description" : "Name zum Anzeigen",
            "type" : "string"
          },
          "admin" : {
            "description" : "Flag, ob dieser Deskriptor nur in der Admin-Anwendung zur Verfügung steht",
            "type" : "boolean"
          },
          "kontext" : {
            "description" : "Kontext des Deskriptors",
            "type" : "string",
            "deprecated" : true
          }
        }
      },
      "DeskriptorSuchkontext" : {
        "enum" : [ "BILDER", "MEDIEN", "NOOP", "QUELLEN", "RAETSEL" ],
        "type" : "string"
      },
      "DeskriptorUI" : {
        "description" : "DTO für die Funktion eines Deskriptors bei der Suche.",
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "description" : "technische ID",
            "type" : "integer"
          },
          "name" : {
            "description" : "Name zum Anzeigen",
            "type" : "string"
          }
        }
      },
      "DomainEntityStatus" : {
        "description" : "Veröffentlichungsstatus eines Domain-Objekts",
        "enum" : [ "ERFASST", "FREIGEGEBEN" ],
        "type" : "string"
      },
      "EditRaetselPayload" : {
        "description" : "Payload zum Anlegen und Ändern eines Rätsels",
        "type" : "object",
        "properties" : {
          "latexHistorisieren" : {
            "description" : "Flag, ob Änderungen im LaTeX-Code historisiert werden sollen. Ist nur bei inhaltlichen Änderungen sinnvoll.",
            "type" : "boolean"
          },
          "raetsel" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Raetsel"
            }, {
              "description" : "die zu speichernden Daten des Rätsels"
            } ]
          }
        }
      },
      "EditRaetselgruppePayload" : {
        "description" : "Payload zum Anlegen und Ändern einer Rätselgruppe ohne Elemente.",
        "required" : [ "name", "schwierigkeitsgrad", "referenztyp", "referenz" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "technische ID, 'neu' für neue Rätselgruppen",
            "type" : "string"
          },
          "name" : {
            "description" : "Name der Rätselgruppe",
            "maxLength" : 100,
            "minLength" : 1,
            "pattern" : "[\\w äöüß\\:\\-\\.\\,]*",
            "type" : "string"
          },
          "kommentar" : {
            "description" : "optionaler Kommentar",
            "maxLength" : 200,
            "pattern" : "[\\w äöüß\\:\\-\\.\\,]*",
            "type" : "string"
          },
          "schwierigkeitsgrad" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Schwierigkeitsgrad"
            }, {
              "description" : "Schwierigkeitsgrad, für den diese Rätselgruppe gedacht ist. (enum Schwierigkeitsgrad)"
            } ]
          },
          "referenztyp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Referenztyp"
            }, {
              "description" : "Refernztyp - Verbindung zum alten Aufgabenarchiv, Kontext zur Interpretation des Attributs referenz"
            } ]
          },
          "referenz" : {
            "description" : "ID einers Wettbwerbs oder einer Serie im alten Aufgabenarchiv",
            "maxLength" : 36,
            "minLength" : 1,
            "pattern" : "^[\\w äöüß]{1,20}$",
            "type" : "string"
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainEntityStatus"
            }, {
              "description" : "Veröffentlichungsstatus der Rätselgruppe. Nur freigegebene sind über die Open-Data-API abrufbar"
            } ]
          }
        }
      },
      "EditRaetselgruppenelementPayload" : {
        "description" : "Daten zum Anlegen und Ändern eines Rätselgruppenelements",
        "required" : [ "nummer" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "technische ID, 'neu' für neues Element",
            "pattern" : "^[neua-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          },
          "nummer" : {
            "description" : "Nummer, die die Reihenfolge innerhalb der Gruppe festlegt",
            "pattern" : "^[a-zA-Z\\d\\-]{1,100}$",
            "type" : "string"
          },
          "punkte" : {
            "format" : "int32",
            "description" : "Punkte für dieses Rätsel, multipliziert mit 100, um Rundungsfehler zu vermeiden.",
            "type" : "integer"
          },
          "raetselSchluessel" : {
            "description" : "fachlicher SCHLUESSEL des Rätsels, nicht Teil der persistenten Daten. Nützlich für die Anzeige",
            "pattern" : "^[\\d]{5}$",
            "type" : "string"
          }
        }
      },
      "EnumType" : {
        "enum" : [ "ORDINAL", "STRING" ],
        "type" : "string"
      },
      "FileUpload" : {
        "type" : "object"
      },
      "GeneratedFile" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string"
          },
          "fileData" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      },
      "Grafik" : {
        "description" : "Vorschau (png) einer Grafik, die in LaTeX eingebunden wird.",
        "type" : "object",
        "properties" : {
          "messagePayload" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessagePayload"
            }, {
              "description" : "Info, ob die Grafik bereits da ist"
            } ]
          },
          "pfad" : {
            "description" : "der relative Pfad im LaTeX",
            "type" : "string"
          },
          "image" : {
            "format" : "binary",
            "description" : "Base64-encodetes png Kann mit einem img src=\\\"data:image/png;base64- Tag angezeigt werden. Kann null sein!",
            "type" : "string"
          }
        }
      },
      "GrafikInfo" : {
        "description" : "Info über ein im LaTeX-Code der Frage oder Lösung eingebundenes eps-Image.",
        "type" : "object",
        "properties" : {
          "pfad" : {
            "description" : "Pfad des eps relativ zum LaTex-File im LaTeX-Code",
            "type" : "string"
          },
          "existiert" : {
            "description" : "Flag, ob die Grafik schon hochgeladen wurde. Erst dann lässt sich das Rätsel generieren.",
            "type" : "boolean"
          }
        }
      },
      "Images" : {
        "description" : "Objekt das ein png mit dem Text für die Frage/Quizaufgabe und ein png mit dem Text für die Lösung enthält",
        "type" : "object",
        "properties" : {
          "imageFrage" : {
            "format" : "binary",
            "description" : "Base64-encodetes png mit dem Text der Frage/Quizaufgabe. Kann mit einem img src=\"data:image/png;base64- Tag angezeigt werden",
            "type" : "string"
          },
          "imageLoesung" : {
            "format" : "binary",
            "description" : "Base64-encodetes png mit dem Text der Lösung. Kann mit einem img src=\"data:image/png;base64- Tag angezeigt werden",
            "type" : "string"
          }
        }
      },
      "LayoutAntwortvorschlaege" : {
        "description" : "enum für das gewünschte Layout der Antwortvorschläge im Aufgabenimage. NOOP: keine Antwortvorschläge, ANKREUZTABELLE: zweizeilige Tabelle wie im Minikänguruwettbewerb - oben die Lösungsvorschläge - unten leer zum Ankreuzen, BUCHSTABEN: zweizeilige Tabelle - oben Lösungsbuchstaben, unten die Lösungsvorschläge, DESCRIPTION: zweispaltige Liste - links Lösungsbuchstaben, rechts die Lösungsvorschläge",
        "enum" : [ "NOOP", "ANKREUZTABELLE", "BUCHSTABEN", "DESCRIPTION" ],
        "type" : "string"
      },
      "MessagePayload" : {
        "description" : "eine kategorisierte Meldung",
        "type" : "object",
        "properties" : {
          "level" : {
            "description" : "Level der Message: INFO | WARN | ERROR",
            "type" : "string"
          },
          "message" : {
            "description" : "die message",
            "type" : "string"
          }
        }
      },
      "MessagePayload1" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "gesamtpunktverteilung"
        }
      },
      "MultipartBody" : {
        "$ref" : "#/components/schemas/UploadFormSchema"
      },
      "OAuthClientCredentials" : {
        "description" : "credentials des OAuth2-Clients beim authprovider",
        "required" : [ "clientId", "clientSecret" ],
        "type" : "object",
        "properties" : {
          "clientId" : {
            "description" : "ID des authprovider-Clients",
            "maxLength" : 50,
            "pattern" : "[a-zA-Z0-9+=]*",
            "type" : "string"
          },
          "clientSecret" : {
            "description" : "secret des authprovider-Clients",
            "maxLength" : 50,
            "pattern" : "[a-zA-Z0-9+=]*",
            "type" : "string"
          },
          "nonce" : {
            "description" : "zur Authentifizierung des Clients generierter String, der vom authprovider unverändert zurückgegeben wird",
            "maxLength" : 36,
            "pattern" : "[a-zA-Z0-9\\-]*",
            "type" : "string"
          }
        }
      },
      "Quelle" : {
        "description" : "Quelle für ein Rätsel",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "technische ID, 'neu' für neue Rätsel",
            "type" : "string"
          },
          "quellenart" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Quellenart"
            }, {
              "description" : "Art der Quelle: Mensch, Buch, Zeitschrift"
            } ]
          },
          "sortNumber" : {
            "format" : "int64",
            "description" : "Zahl zum Sortieren",
            "type" : "integer"
          },
          "name" : {
            "description" : "menschenlesbarer Anzeigetext für eine Quellenangabe",
            "type" : "string"
          },
          "mediumUuid" : {
            "description" : "Referenz auf ein Buch oder eine Zeitschrift",
            "type" : "string"
          },
          "deskriptoren" : {
            "description" : "Deskriptoren, für die Quelle",
            "type" : "array",
            "items" : {
              "description" : "Deskriptor-Entity mit allen Attributen.",
              "type" : "object",
              "properties" : {
                "id" : {
                  "format" : "int64",
                  "description" : "technische ID",
                  "type" : "integer"
                },
                "name" : {
                  "description" : "Name zum Anzeigen",
                  "type" : "string"
                },
                "admin" : {
                  "description" : "Flag, ob dieser Deskriptor nur in der Admin-Anwendung zur Verfügung steht",
                  "type" : "boolean"
                },
                "kontext" : {
                  "description" : "Kontext des Deskriptors",
                  "type" : "string",
                  "deprecated" : true
                }
              }
            }
          }
        }
      },
      "QuelleMinimalDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "technische ID der Quelle",
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          },
          "name" : {
            "description" : "menschenlesbarer Anzeigetext für eine Quellenangabe",
            "type" : "string"
          }
        }
      },
      "Quellenart" : {
        "enum" : [ "BUCH", "PERSON", "ZEITSCHRIFT" ],
        "type" : "string"
      },
      "Quiz" : {
        "description" : "Ein Quiz, also eine Zusammenstellung von Rätseln, die direkt in einer GUI dargestellt werden kann.",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "der Name der Quiz",
            "type" : "string"
          },
          "klassenstufe" : {
            "description" : "die Klassenstufe, für die diese Quiz gedacht ist",
            "type" : "string"
          },
          "startpunkte" : {
            "format" : "int32",
            "description" : "Anzahl Punkte, mit dem man in das Quiz startet. Der Wert wird so berechnet, dass man bei 0 Punkten landet, wenn man alle Aufgaben falsch löst. Um Rundungsfehler zu vermeiden, wird mit 100 multipliziert, also 1200 statt 12.",
            "type" : "integer"
          },
          "aufgaben" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Quizaufgabe"
            }
          }
        }
      },
      "Quizaufgabe" : {
        "description" : "Ein Rätsel, also ein Element eines Quiz zum Anzeigen in einer GUI.",
        "type" : "object",
        "properties" : {
          "nummer" : {
            "description" : "Nummer der Quizaufgabe. Ist eindeutig innerhalb der Quiz und streng aufsteigend sortierbar",
            "type" : "string"
          },
          "schluessel" : {
            "description" : "fachlich eindeutiger Schlüssel des verwendeten Rätsels",
            "type" : "string"
          },
          "quelle" : {
            "description" : "Quelle der Quizaufgabe für eine Zitatsection",
            "type" : "string"
          },
          "punkte" : {
            "format" : "int32",
            "description" : "Anzahl Punkte, die es für diese Aufgabe bei gibt. Um Rundungsfehler zu vermeiden, wird mit 100 mulzipliziert, also 300 statt 3",
            "type" : "integer"
          },
          "strafpunkte" : {
            "format" : "int32",
            "description" : "Anzahl Strafpunkte, die man bei einer falschen Antwort bekommt. Um Rundungsfehler zu vermeiden, wird mit 100 multipliziert, also 75 statt 0,75",
            "type" : "integer"
          },
          "antwortvorschlaege" : {
            "description" : "optionale Antwortvorschläge, wenn es sich um beim Quiz um multiple choice handelt",
            "type" : "array",
            "items" : {
              "description" : "Antwortvorschlag für ein multiple choice-Rätsel",
              "type" : "object",
              "properties" : {
                "buchstabe" : {
                  "description" : "der Antwortbuchstabe A, B, C, ... zur Anzeige einer Vorschlagsauswahl",
                  "type" : "string"
                },
                "text" : {
                  "description" : "optionaler Text der Antwort",
                  "type" : "string"
                },
                "korrekt" : {
                  "description" : "Flag, ob dies die korrekte Antwort ist.",
                  "type" : "boolean"
                }
              }
            }
          },
          "images" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Images"
            }, {
              "description" : "Images, die angezeigt werden können"
            } ]
          }
        }
      },
      "Raetsel" : {
        "description" : "Stammdaten eines Rätsels",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "technische ID, 'neu' für neue Rätsel",
            "type" : "string"
          },
          "schluessel" : {
            "description" : "fachlicher Schlüssel im Aufgabenarchiv.",
            "pattern" : "^[\\d]{5}$",
            "type" : "string"
          },
          "name" : {
            "description" : "kurzer Titel zum Anzeigen in Suchergebnissen, volltextsuchfähig",
            "type" : "string"
          },
          "frage" : {
            "description" : "LaTeX-Code der Frage, volltextsuchfähig",
            "type" : "string"
          },
          "loesung" : {
            "description" : "LaTeX-Code der Lösung, volltextsuchfähig",
            "type" : "string"
          },
          "kommentar" : {
            "description" : "Kommentar, volltextsuchfähig",
            "type" : "string"
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainEntityStatus"
            }, {
              "description" : "Veröffentlichungsstatus des Rätsels, nur freigegebene können in der mja-app gefunden werden."
            } ]
          },
          "quelleId" : {
            "description" : "Referenz auf die Quelle des Rätsels",
            "pattern" : "^[a-fA-F\\d\\-]{1,36}$",
            "type" : "string"
          },
          "quelle" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/QuelleMinimalDto"
            }, {
              "description" : "Referenz auf die Quelle des Rätsels sowie ein Name zum Anzeigen"
            } ]
          },
          "schreibgeschuetzt" : {
            "description" : "Zeigt an, ob die Person, die das Rätsel geladen hat, änderungsberechtigt ist.",
            "type" : "boolean"
          },
          "antwortvorschlaege" : {
            "description" : "optionale Antwortvorschläge, wenn es für multiple choice genutzt werden kann",
            "type" : "array",
            "items" : {
              "description" : "Antwortvorschlag für ein multiple choice-Rätsel",
              "type" : "object",
              "properties" : {
                "buchstabe" : {
                  "description" : "der Antwortbuchstabe A, B, C, ... zur Anzeige einer Vorschlagsauswahl",
                  "type" : "string"
                },
                "text" : {
                  "description" : "optionaler Text der Antwort",
                  "type" : "string"
                },
                "korrekt" : {
                  "description" : "Flag, ob dies die korrekte Antwort ist.",
                  "type" : "boolean"
                }
              }
            }
          },
          "deskriptoren" : {
            "description" : "Deskriptoren, für das Rätsel",
            "type" : "array",
            "items" : {
              "description" : "Deskriptor-Entity mit allen Attributen.",
              "type" : "object",
              "properties" : {
                "id" : {
                  "format" : "int64",
                  "description" : "technische ID",
                  "type" : "integer"
                },
                "name" : {
                  "description" : "Name zum Anzeigen",
                  "type" : "string"
                },
                "admin" : {
                  "description" : "Flag, ob dieser Deskriptor nur in der Admin-Anwendung zur Verfügung steht",
                  "type" : "boolean"
                },
                "kontext" : {
                  "description" : "Kontext des Deskriptors",
                  "type" : "string",
                  "deprecated" : true
                }
              }
            }
          },
          "grafikInfos" : {
            "description" : "Info über die im LaTeX-Code der Frage oder Lösung eingebundenen eps-Images.",
            "type" : "array",
            "items" : {
              "description" : "Info über ein im LaTeX-Code der Frage oder Lösung eingebundenes eps-Image.",
              "type" : "object",
              "properties" : {
                "pfad" : {
                  "description" : "Pfad des eps relativ zum LaTex-File im LaTeX-Code",
                  "type" : "string"
                },
                "existiert" : {
                  "description" : "Flag, ob die Grafik schon hochgeladen wurde. Erst dann lässt sich das Rätsel generieren.",
                  "type" : "boolean"
                }
              }
            }
          },
          "images" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Images"
            }, {
              "description" : "Images, die angezeigt werden können"
            } ]
          },
          "raetselPDF" : {
            "format" : "binary",
            "description" : "PDF",
            "type" : "string"
          }
        }
      },
      "RaetselgruppeDetails" : {
        "description" : "Details einer Rätselgruppe für die Anzeige oder zum Generieren von PDF oder LaTeX. Eine Rätselruppe ist eine freie Zusammenstellung von Rätseln. Ziel ist die Erzeugung eines PDFs. Die Rästel werden in der Reihenfolge gedruckt, in der sie in der Rätselgruppe eingetragen werden.",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "technische ID",
            "type" : "string"
          },
          "name" : {
            "description" : "Name der Rätselgruppe",
            "type" : "string"
          },
          "kommentar" : {
            "description" : "optionaler Kommentar",
            "type" : "string"
          },
          "schwierigkeitsgrad" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Schwierigkeitsgrad"
            }, {
              "description" : "Schwierigkeitsgrad, für das diese Rätselgruppe gedacht ist"
            } ]
          },
          "referenztyp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Referenztyp"
            }, {
              "description" : "Refernztyp - Verbindung zum alten Aufgabenarchiv, Kontext zur Interpretation des Attributs referenz"
            } ]
          },
          "referenz" : {
            "description" : "ID einers Wettbwerbs oder einer Serie im alten Aufgabenarchiv",
            "type" : "string"
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainEntityStatus"
            }, {
              "description" : "Veröffentlichungsstatus der Rätselgruppe. Nur freigegebene sind über die Open-Data-API abrufbar"
            } ]
          },
          "schreibgeschuetzt" : {
            "description" : "Zeigt an, ob die Person, die das Rätsel geladen hat, änderungsberechtigt ist.",
            "type" : "boolean"
          },
          "geaendertDurch" : {
            "description" : "Teil der UUID der Person, die die Rätselgruppe angelegt oder geändert hat",
            "type" : "string"
          },
          "elemente" : {
            "description" : "Elemente der Rätselgruppe",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Raetselgruppenelement"
            }
          }
        }
      },
      "RaetselgruppenSortattribute" : {
        "description" : "Attribute, nach denen Rätselgruppen bei der Suche sortiert werden können. Es wird immer nur nach genau einem Attribut sortiert",
        "enum" : [ "name", "referenz", "referenztyp", "schwierigkeitsgrad" ],
        "type" : "string"
      },
      "Raetselgruppenelement" : {
        "description" : "Element einer Rätselgruppe",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "technische ID, 'neu' für neues Element",
            "type" : "string"
          },
          "nummer" : {
            "description" : "Nummer, die die Reihenfolge innerhalb der Gruppe festlegt",
            "type" : "string"
          },
          "punkte" : {
            "format" : "int32",
            "description" : "Punkte für dieses Rätsel, multipliziert mit 100, um Rundungsfehler zu vermeiden.",
            "type" : "integer"
          },
          "raetselSchluessel" : {
            "description" : "fachlicher SCHLUESSEL des Rätsels, nicht Teil der persistenten Daten. Nützlich für die Anzeige",
            "type" : "string"
          },
          "name" : {
            "description" : "Name des Rätsels, nicht Teil der Daten des Elements. Nützlich für die Anzeige",
            "type" : "string"
          },
          "loesungsbuchstabe" : {
            "description" : "Loesungsbuchstabe, falls vorhanden. Kann null sein",
            "type" : "string"
          }
        }
      },
      "RaetselgruppensucheTreffer" : {
        "description" : "Teilmenge der Treffer einer Suchanfrage",
        "type" : "object",
        "properties" : {
          "trefferGesamt" : {
            "format" : "int64",
            "description" : "Gesamtzahl aller Treffer der Suchanfrage",
            "type" : "integer"
          },
          "items" : {
            "description" : "die abgefragte Teilmenge aller Treffer der Suchanfrage (Page)",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "description" : "technische ID",
                  "type" : "string"
                },
                "name" : {
                  "description" : "Name der Rätselgruppe",
                  "type" : "string"
                },
                "kommentar" : {
                  "description" : "poptionaler Kommentar",
                  "type" : "string"
                },
                "schwierigkeitsgrad" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/Schwierigkeitsgrad"
                  }, {
                    "description" : "Klassenstufe, für die die Rätselgruppe gedacht ist"
                  } ]
                },
                "referenztyp" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/Referenztyp"
                  }, {
                    "description" : "Refernztyp - Verbindung zum alten Aufgabenarchiv, Kontext zur Interpretation des Attributs referenz"
                  } ]
                },
                "referenz" : {
                  "description" : "ID einers Wettbwerbs oder einer Serie im alten Aufgabenarchiv",
                  "type" : "string"
                },
                "status" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/DomainEntityStatus"
                  }, {
                    "description" : "Veröffentlichungsstatus der Rätselgruppe. Nur freigegebene sind über die Open-Data-API abrufbar"
                  } ]
                },
                "geaendertDurch" : {
                  "description" : "ID des Änderers",
                  "type" : "string"
                },
                "anzahlElemente" : {
                  "format" : "int64",
                  "description" : "Anzahl der Elemente (also der Rätsel)",
                  "type" : "integer"
                }
              }
            }
          }
        }
      },
      "RaetselgruppensucheTrefferItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "technische ID",
            "type" : "string"
          },
          "name" : {
            "description" : "Name der Rätselgruppe",
            "type" : "string"
          },
          "kommentar" : {
            "description" : "poptionaler Kommentar",
            "type" : "string"
          },
          "schwierigkeitsgrad" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Schwierigkeitsgrad"
            }, {
              "description" : "Klassenstufe, für die die Rätselgruppe gedacht ist"
            } ]
          },
          "referenztyp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Referenztyp"
            }, {
              "description" : "Refernztyp - Verbindung zum alten Aufgabenarchiv, Kontext zur Interpretation des Attributs referenz"
            } ]
          },
          "referenz" : {
            "description" : "ID einers Wettbwerbs oder einer Serie im alten Aufgabenarchiv",
            "type" : "string"
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainEntityStatus"
            }, {
              "description" : "Veröffentlichungsstatus der Rätselgruppe. Nur freigegebene sind über die Open-Data-API abrufbar"
            } ]
          },
          "geaendertDurch" : {
            "description" : "ID des Änderers",
            "type" : "string"
          },
          "anzahlElemente" : {
            "format" : "int64",
            "description" : "Anzahl der Elemente (also der Rätsel)",
            "type" : "integer"
          }
        }
      },
      "RaetselsucheTreffer" : {
        "description" : "Teilmenge der Treffer einer Suchanfrage",
        "type" : "object",
        "properties" : {
          "trefferGesamt" : {
            "format" : "int64",
            "description" : "Gesamtzahl aller Treffer der Suchanfrage",
            "type" : "integer"
          },
          "treffer" : {
            "description" : "die abgefragte Teilmenge aller Treffer der Suchanfrage (Page)",
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "schluessel" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "kommentar" : {
                  "type" : "string"
                },
                "status" : {
                  "$ref" : "#/components/schemas/DomainEntityStatus"
                },
                "deskriptoren" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Deskriptor"
                  }
                }
              }
            }
          }
        }
      },
      "Referenztyp" : {
        "description" : "Kontext zur Interpretation des Parameters 'referenz', also einer ID im alten Aufgabenarchiv",
        "enum" : [ "MINIKAENGURU", "SERIE" ],
        "type" : "string"
      },
      "ResponsePayload" : {
        "description" : "generisches Response-Objekt, das ein MessagePayload und ggf. Daten enthält",
        "type" : "object",
        "properties" : {
          "message" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MessagePayload"
            }, {
              "description" : "das MessagePayload"
            } ]
          },
          "data" : {
            "description" : "daten die als JSON mitgegeben werden. Kann null sein",
            "type" : "object"
          }
        }
      },
      "Schwierigkeitsgrad" : {
        "description" : "enum Schwierigkeitsgrad für Rätselgruppen oder Quiz(e)",
        "enum" : [ "AB_NEUN", "DREI_VIER", "EINS", "EINS_ZWEI", "FUENF_SECHS", "GRUNDSCHULE", "IKID", "SEK_1", "SEK_2", "SIEBEN_ACHT", "VORSCHULE", "ZWEI" ],
        "type" : "string"
      },
      "SortDirection" : {
        "enum" : [ "asc", "desc" ],
        "type" : "string"
      },
      "Suchfilter" : {
        "description" : "ein Objekt, das Suchparameter enthält",
        "type" : "object",
        "properties" : {
          "suchstring" : {
            "description" : "ein String, mit dem gesucht wird",
            "type" : "string"
          },
          "deskriptorenIds" : {
            "description" : "ein kommaseparierter String, der IDs von Deskriptoren, mit denen gesucht wird",
            "type" : "string"
          }
        }
      },
      "UploadFormSchema" : {
        "type" : "object",
        "properties" : {
          "uploadedFile" : {
            "$ref" : "#/components/schemas/UploadItemSchema"
          }
        }
      },
      "UploadItemSchema" : {
        "format" : "binary",
        "type" : "string"
      },
      "UploadType" : {
        "enum" : [ "GRAFIK" ],
        "type" : "string"
      }
    }
  }
}